plugins {
    id 'java'
    id 'application'
    id 'com.diffplug.spotless' version '6.0.0'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation fileTree(dir: 'libraries', include: ['*.jar'])
    testImplementation 'junit:junit:4.12'
}

application {
    mainClass = 'nortantis.swing.MainWindow'
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    options.compilerArgs << '-Xlint:deprecation' << '-Xlint:unchecked'
}

jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    manifest {
        attributes 'Main-Class': 'nortantis.swing.MainWindow'
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    } {
        exclude 'META-INF/*.SF', 'META-INF/*.DSA', 'META-INF/*.RSA'
    }
    from(sourceSets.main.output)
    from('assets') {
        into 'assets'
    }
}

sourceSets {
    main {
        java {
            srcDirs = ['src']
            include '**/*.java'
            exclude 'nortantis/test/**/*.java'
        }
    }
    test {
        java {
            srcDirs = ['src']
            include 'nortantis/test/**/*.java'
        }
    }
}

spotless {
    java {
        eclipse().configFile 'eclipse-formatter-config.xml'
    }
}


// Define a task to format a specific file
task formatSpecificFile {
    doLast {
        def filePath = project.hasProperty('filePath') ? project.filePath : 'src/nortantis/Background.java'
        println "Formatting file: $filePath"
        javaexec {
            main = 'com.diffplug.spotless.Main'
            classpath = configurations.spotless
            args 'apply', '--java', filePath
        }
    }
}
